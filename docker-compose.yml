services:
  db_master:
    image: postgres:16
    container_name: insurance-postgres-master
    volumes:
      - postgres_master_data:/var/lib/postgresql/data/
      - ./insurance_recommendation_system/app/sql/init:/docker-entrypoint-initdb.d/
      - ./postgres/configs/master:/etc/postgresql/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=insurance
      - POSTGRES_DB=insurance
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=replicator_password
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U insurance && pg_isready -U replicator" ]
      interval: 10s
      timeout: 5s
      retries: 10
    command: postgres -c config_file=/etc/postgresql/postgresql.conf -c hba_file=/etc/postgresql/pg_hba.conf
    networks:
      - insurance_network

  db_slave:
    image: postgres:16
    container_name: insurance-postgres-slave
    volumes:
      - postgres_slave_data:/var/lib/postgresql/data/
      - ./postgres/configs/slave:/etc/postgresql/
      - ./postgres/scripts:/scripts/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=insurance
      - POSTGRES_DB=insurance
      - PGUSER=postgres
      - POSTGRES_MASTER_SERVICE=db_master
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=replicator_password
    ports:
      - "5433:5432"
    depends_on:
      replication_setup:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U insurance" ]
      interval: 10s
      timeout: 5s
      retries: 10
    entrypoint: [ "/scripts/slave_entrypoint.sh" ]
    networks:
      - insurance_network

  replication_setup:
    image: postgres:16
    container_name: insurance-replication-setup
    volumes:
      - ./postgres/scripts:/scripts
      - postgres_master_data:/master_data
    environment:
      - PGPASSWORD=postgres
      - POSTGRES_REPLICATION_USER=replicator
      - POSTGRES_REPLICATION_PASSWORD=replicator_password
    depends_on:
      db_master:
        condition: service_healthy
    command: [ "/scripts/setup_replication.sh" ]
    networks:
      - insurance_network

  app:
    build: ./insurance_recommendation_system
    container_name: insurance-api-service
    command: sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./insurance_recommendation_system:/app
      - ./migrations:/app/migrations
    ports:
      - "8000:8000"
    depends_on:
      db_master:
        condition: service_healthy
      db_slave:
        condition: service_healthy
      recommendation_system:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://insurance:postgres@db_master:5432/insurance
      - DATABASE_SLAVE_URL=postgresql://insurance:postgres@db_slave:5432/insurance
      - RECOMMENDATION_API_URL=http://recommendation_system:8001/api/recommendations
      - PYTHONPATH=/app
    networks:
      - insurance_network

  migration:
    build: ./insurance_recommendation_system
    container_name: insurance-db-migration
    command: tail -f /dev/null
    volumes:
      - ./insurance_recommendation_system:/app
      - ./migrations:/app/migrations
    depends_on:
      db_master:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://insurance:postgres@db_master:5432/insurance
      - PYTHONPATH=/app
    networks:
      - insurance_network

  recommendation_system:
    build:
      context: ./recommendation_system
    container_name: insurance-ml-recommendation
    volumes:
      - ./recommendation_system:/app
    ports:
      - "8001:8001"
    environment:
      - MODEL_PATH=microsoft/DialoGPT-small
      - PRODUCTS_DATA_PATH=/app/model/products_data.json
      - PYTHONHTTPSVERIFY=0
      - HF_HUB_DISABLE_SYMLINKS_WARNING=1
      - DATABASE_URL=postgresql://insurance:postgres@db_master:5432/insurance
      - PYTHONPATH=/app
    command: >
      sh -c "python init_alembic.py &&
             python apply_migrations.py && 
             python watch_changes.py &
             uvicorn main:app --host 0.0.0.0 --port 8001 --reload --reload-dir /app"
    depends_on:
      db_master:
        condition: service_healthy
    networks:
      - insurance_network

  replication_monitor:
    image: postgres:16
    container_name: insurance-replication-monitor
    volumes:
      - ./postgres/scripts:/scripts
    environment:
      - PGPASSWORD=postgres
    depends_on:
      db_master:
        condition: service_healthy
      db_slave:
        condition: service_healthy
    command: [ "/scripts/monitor_replication.sh" ]
    restart: unless-stopped
    networks:
      - insurance_network

volumes:
  postgres_master_data:
  postgres_slave_data:

networks:
  insurance_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1